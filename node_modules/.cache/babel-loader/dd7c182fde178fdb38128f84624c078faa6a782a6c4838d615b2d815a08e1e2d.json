{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/Bollywood/src/components/GameScreen.js\",\n  _s = $RefreshSig$();\n// src/components/GameScreen.js\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { startGame, playNextYear, resetGame } from \"../features/game/gameSlice\";\nimport ProducerList from \"../features/producers/ProducerList\";\nimport MovieList from \"../features/movies/MovieList\";\nimport NewsFeed from \"../features/news/NewsFeed\";\nimport { Box, Button, Typography, Stack } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    running,\n    year,\n    producers,\n    movies,\n    oscars,\n    news\n  } = useSelector(state => state.game);\n  const latestOscar = oscars && oscars.length > 0 ? oscars[oscars.length - 1] : null;\n  const moviesThisYear = movies.filter(m => m.year === year - 1);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 2,\n        textAlign: \"center\"\n      },\n      children: \"Bollywood Producer Tycoon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      justifyContent: \"center\",\n      sx: {\n        mb: 2\n      },\n      children: !running ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => dispatch(startGame()),\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: () => dispatch(playNextYear()),\n          children: \"Next Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: () => dispatch(resetGame()),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mb: 1\n      },\n      children: [\"Year: \", year, \" \", running ? \"\" : \"(Paused)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProducerList, {\n      producers: producers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mt: 3\n      },\n      children: [\"Movies Released \", year > 2025 ? `(Year ${year - 1})` : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: moviesThisYear,\n      oscarWinnerId: latestOscar ? latestOscar.id : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewsFeed, {\n      news: news\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n// end of code\n_s(GameScreen, \"1mDufP11H/vJWHTzd2ZkkTLfVDg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useSelector","useDispatch","startGame","playNextYear","resetGame","ProducerList","MovieList","NewsFeed","Box","Button","Typography","Stack","jsxDEV","_jsxDEV","Fragment","_Fragment","GameScreen","_s","dispatch","running","year","producers","movies","oscars","news","state","game","latestOscar","length","moviesThisYear","filter","m","sx","p","children","variant","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","direction","spacing","justifyContent","color","onClick","mt","oscarWinnerId","id","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/Bollywood/src/components/GameScreen.js"],"sourcesContent":["// src/components/GameScreen.js\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { startGame, playNextYear, resetGame } from \"../features/game/gameSlice\";\nimport ProducerList from \"../features/producers/ProducerList\";\nimport MovieList from \"../features/movies/MovieList\";\nimport NewsFeed from \"../features/news/NewsFeed\";\nimport { Box, Button, Typography, Stack } from \"@mui/material\";\n\nexport default function GameScreen() {\n  const dispatch = useDispatch();\n  const { running, year, producers, movies, oscars, news } = useSelector((state) => state.game);\n\n  const latestOscar = oscars && oscars.length > 0 ? oscars[oscars.length - 1] : null;\n  const moviesThisYear = movies.filter((m) => m.year === year - 1);\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Typography variant=\"h4\" sx={{ mb: 2, textAlign: \"center\" }}>\n        Bollywood Producer Tycoon\n      </Typography>\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\" sx={{ mb: 2 }}>\n        {!running ? (\n          <Button variant=\"contained\" color=\"primary\" onClick={() => dispatch(startGame())}>\n            Start Game\n          </Button>\n        ) : (\n          <>\n            <Button variant=\"contained\" color=\"success\" onClick={() => dispatch(playNextYear())}>\n              Next Year\n            </Button>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={() => dispatch(resetGame())}>\n              Reset\n            </Button>\n          </>\n        )}\n      </Stack>\n      <Typography variant=\"h6\" sx={{ mb: 1 }}>\n        Year: {year} {running ? \"\" : \"(Paused)\"}\n      </Typography>\n      <ProducerList producers={producers} />\n      <Typography variant=\"h6\" sx={{ mt: 3 }}>\n        Movies Released {year > 2025 ? `(Year ${year - 1})` : \"\"}\n      </Typography>\n      <MovieList movies={moviesThisYear} oscarWinnerId={latestOscar ? latestOscar.id : null} />\n      <NewsFeed news={news} />\n    </Box>\n  );\n}\n\n// end of code\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
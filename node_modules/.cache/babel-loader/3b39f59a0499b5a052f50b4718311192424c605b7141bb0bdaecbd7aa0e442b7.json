{"ast":null,"code":"// src/features/producers/producerUtils.js\n\n// 32 Producer names provided by user\nexport const PRODUCER_NAMES = [\"Golu\", \"Amit Bagle\", \"Mangesh\", \"Vasim\", \"Amit Randhe\", \"Khushi\", \"Ajinkya\", \"Vinay\", \"Aashish\", \"Ashok Singh\", \"Sandip Basra\", \"Gokul\", \"Ritesh\", \"Bipin\", \"Ajit Bonde\", \"Amol Patil\", \"Hemant\", \"Ravi Patil\", \"Sachin Pardesi\", \"Sachin Patil\", \"Vishal\", \"Nitin\", \"Dipak Trivedi\", \"Sunil\", \"Charu\", \"Bhavesh Chaudhari\", \"Dipak R\", \"Mayur\", \"Nilesh\", \"Dipak BH\", \"Sunil\"];\n\n// Util function to generate initial producers array with attributes\nexport function initializeProducers() {\n  // Ensure unique producer names (in case of duplicates)\n  const uniqueNames = Array.from(new Set(PRODUCER_NAMES));\n  return uniqueNames.map((name, idx) => ({\n    id: idx + 1,\n    name,\n    wealth: 100000,\n    // 1 Lakh INR initial\n    oscars: 0,\n    movies: [],\n    loan: 0,\n    netWorthHistory: [100000],\n    // Track year-wise net worth\n    isActive: true // For future use (bankrupt etc.)\n  }));\n}","map":{"version":3,"names":["PRODUCER_NAMES","initializeProducers","uniqueNames","Array","from","Set","map","name","idx","id","wealth","oscars","movies","loan","netWorthHistory","isActive"],"sources":["/data/data/com.termux/files/home/Bollywood/src/features/producers/producerUtils.js"],"sourcesContent":["// src/features/producers/producerUtils.js\n\n// 32 Producer names provided by user\nexport const PRODUCER_NAMES = [\n  \"Golu\", \"Amit Bagle\", \"Mangesh\", \"Vasim\", \"Amit Randhe\", \"Khushi\", \"Ajinkya\", \"Vinay\",\n  \"Aashish\", \"Ashok Singh\", \"Sandip Basra\", \"Gokul\", \"Ritesh\", \"Bipin\", \"Ajit Bonde\", \"Amol Patil\",\n  \"Hemant\", \"Ravi Patil\", \"Sachin Pardesi\", \"Sachin Patil\", \"Vishal\", \"Nitin\", \"Dipak Trivedi\",\n  \"Sunil\", \"Charu\", \"Bhavesh Chaudhari\", \"Dipak R\", \"Mayur\", \"Nilesh\", \"Dipak BH\", \"Sunil\"\n];\n\n// Util function to generate initial producers array with attributes\nexport function initializeProducers() {\n  // Ensure unique producer names (in case of duplicates)\n  const uniqueNames = Array.from(new Set(PRODUCER_NAMES));\n  return uniqueNames.map((name, idx) => ({\n    id: idx + 1,\n    name,\n    wealth: 100000, // 1 Lakh INR initial\n    oscars: 0,\n    movies: [],\n    loan: 0,\n    netWorthHistory: [100000], // Track year-wise net worth\n    isActive: true, // For future use (bankrupt etc.)\n  }));\n    }\n"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,cAAc,GAAG,CAC5B,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EACrF,SAAS,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,YAAY,EAChG,QAAQ,EAAE,YAAY,EAAE,gBAAgB,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,eAAe,EAC5F,OAAO,EAAE,OAAO,EAAE,mBAAmB,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,CACzF;;AAED;AACA,OAAO,SAASC,mBAAmBA,CAAA,EAAG;EACpC;EACA,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACL,cAAc,CAAC,CAAC;EACvD,OAAOE,WAAW,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,MAAM;IACrCC,EAAE,EAAED,GAAG,GAAG,CAAC;IACXD,IAAI;IACJG,MAAM,EAAE,MAAM;IAAE;IAChBC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,CAAC,MAAM,CAAC;IAAE;IAC3BC,QAAQ,EAAE,IAAI,CAAE;EAClB,CAAC,CAAC,CAAC;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}